# based on virtualenv's activate
# This file must be used with "source bin/activate" *from bash*
# you cannot run it directly
#
 
# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

deactivate () {
    # reset old environment variables
    if [ -n "$_OLD_DUKE_PATH" ] ; then
        PATH="$_OLD_DUKE_PATH"
        export PATH
        unset _OLD_DUKE_PATH
    fi
    if [ -n "$_OLD_DUKE_PYTHONHOME" ] ; then
        PYTHONHOME="$_OLD_DUKE_PYTHONHOME"
        export PYTHONHOME
        unset _OLD_DUKE_PYTHONHOME
    fi

    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
        hash -r
    fi

    if [ -n "$_OLD_DUKE_PS1" ] ; then
        PS1="$_OLD_DUKE_PS1"
        export PS1
        unset _OLD_DUKE_PS1
    fi

    unset DUKE_ENV
    if [ ! "$1" = "nondestructive" ] ; then
    # Self destruct!
        unset -f deactivate
    fi
}

# unset irrelavent variables
deactivate nondestructive

DUKE_ENV="%(base_path)s"
export DUKE_ENV

_OLD_DUKE_PATH="$PATH"
PATH="$DUKE_ENV/bin:$PATH"
export PATH
chmod a+x $DUKE_ENV/bin/*

# unset PYTHONHOME if set
# this will fail if PYTHONHOME is set to the empty string (which is bad anyway)
# could use `if (set -u; : $PYTHONHOME) ;` in bash
if [ -n "$PYTHONHOME" ] ; then
    _OLD_DUKE_PYTHONHOME="$PYTHONHOME"
    unset PYTHONHOME
fi

if [ -z "$DUKE_ENV_DISABLE_PROMPT" ] ; then
    _OLD_DUKE_PS1="$PS1"
    if [ "x" != x ] ; then
	PS1="$PS1"
    else
    if [ "`basename \"$DUKE_ENV\"`" = "__" ] ; then
        # special case for Aspen magic directories
        # see http://www.zetadev.com/software/aspen/
        PS1="[`basename \`dirname \"$DUKE_ENV\"\``] $PS1"
    else
        PS1="\[\e[0;36m\](`basename \"$DUKE_ENV\"`)\[\e[0m\]$PS1"
    fi
    fi
    export PS1
fi

# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
    hash -r
fi

