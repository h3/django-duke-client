# based on virtualenv's activate
# This file must be used with "source bin/activate" *from bash*
# you cannot run it directly

# Deactivate the development environment.
deactivate () {
    # reset old environment variables
    if [ -n "$_OLD_DUKE_PATH" ] ; then
        PATH="$_OLD_DUKE_PATH"
        export PATH
        unset _OLD_DUKE_PATH
    fi
    if [ -n "$_OLD_DUKE_PYTHONHOME" ] ; then
        PYTHONHOME="$_OLD_DUKE_PYTHONHOME"
        export PYTHONHOME
        unset _OLD_DUKE_PYTHONHOME
    fi

    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
        hash -r
    fi

    if [ -n "$_OLD_DUKE_PS1" ] ; then
        PS1="$_OLD_DUKE_PS1"
        export PS1
        unset _OLD_DUKE_PS1
    fi

    unset DUKE_ENV
    if [ ! "$1" = "nondestructive" ] ; then
    # Self destruct!
        unset -f deactivate
    fi
}

# unset irrelavent variables
deactivate nondestructive

DUKE_ENV="%(base_path)s"
export DUKE_ENV
_OLD_DUKE_PATH="$PATH"

# Typing "--settings=projectname.settingsfile" is annoying.
DJANGO_SETTINGS_MODULE=%(settings_module)s

# Add bin/ to the executable path to make them available
# without having to type their path and make all scripts 
# in it executables.
PATH="$DUKE_ENV/.duke/bin:$PATH"
export PATH
chmod a+x $DUKE_ENV/.duke/bin/*

# Make sure that while within the dev environment we only
# use the sandboxed python interpreter.
alias python="$DUKE_ENV/.duke/bin/python -S" 

# Having an executable script called test isn't such great idea.
alias run_tests="$DUKE_ENV/.duke/bin/test" 

# unset PYTHONHOME if set
# this will fail if PYTHONHOME is set to the empty string (which is bad anyway)
# could use `if (set -u; : $PYTHONHOME) ;` in bash
if [ -n "$PYTHONHOME" ] ; then
    _OLD_DUKE_PYTHONHOME="$PYTHONHOME"
    unset PYTHONHOME
fi
 
# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
    hash -r
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# Add come color goodies, just because we can
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

alias buildout='buildout -c dev.cfg'

# Django
alias django='djangodev'
alias syncdb='djangodev syncdb'
alias runserver='djangodev runserver'
alias shell='djangodev shell'
alias dbshell='djangodev dbshell'
alias loaddata='djangodev loaddata'
alias dumpdata='djangodev dumpdata'

# Git
alias gb='git branch'
alias gba='git branch -a'
alias gc='git commit -v'
alias gd='git diff | mate'
alias gl='git pull'
alias gp='git push'
alias gst='git status'

# Prefix the command prompt with %(project_name)s
if [ -z "$DUKE_ENV_DISABLE_PROMPT" ] ; then
    _OLD_DUKE_PS1="$PS1"
    if [ "x" != x ] ; then
	PS1="$PS1"
    else
    if [ "`basename \"$DUKE_ENV\"`" = "__" ] ; then
        # special case for Aspen magic directories
        # see http://www.zetadev.com/software/aspen/
        PS1="[%(project_name)s] $PS1"
    else
        PS1="\[\e[0;36m\](%(project_name)s)\[\e[0m\]$PS1"
    fi
    fi
    export PS1
fi
