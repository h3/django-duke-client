. ~/.bashrc 
# based on virtualenv's activate
# This file must be used with "source bin/activate" *from bash*
# you cannot run it directly


# Shell colors
BLACK="\[\e[0;30m\]" BOLD_BLACK="\[\e[1;30m\]" UNDER_BLACK="\[\e[4;30m\]"
RED="\[\e[0;31m\]" BOLD_RED="\[\e[1;31m\]" UNDER_RED="\[\e[4;31m\]"
GREEN="\[\e[0;32m\]" BOLD_GREEN="\[\e[1;32m\]" UNDER_GREEN="\[\e[4;32m\]"
YELLOW="\[\e[0;33m\]" BOLD_YELLOW="\[\e[1;33m\]" UNDER_YELLOW="\[\e[4;33m\]"
BLUE="\[\e[0;34m\]" BOLD_BLUE="\[\e[1;34m\]" UNDER_BLUE="\[\e[4;34m\]"
PURPLE="\[\e[0;35m\]" BOLD_PURPLE="\[\e[1;35m\]" UNDER_PURPLE="\[\e[4;35m\]"
CYAN="\[\e[0;36m\]" BOLD_CYAN="\[\e[1;36m\]" UNDER_CYAN="\[\e[4;36m\]"
WHITE="\[\e[0;37m\]" BOLD_WHITE="\[\e[1;37m\]" UNDER_WHITE="\[\e[4;37m\]"
NO_COLOR="\[\e[0m\]"



## Prefix the command prompt with oxygeneregional
#function __django_status {
#   #"\[\033[00;35m\]:django\[\e[0m\]"
#    if [ $(pwd | xargs basename) = "oxygeneregional" ] ; then
#        echo ":django"
#    else
#        echo $(pwd | xargs basename)
#    fi
#}

# Prefix the command prompt with %(project_name)s
function __in_project {
   #"\[\033[00;35m\]:django\[\e[0m\]"
    if [ "`pwd | xargs basename`" = "%(project_name)s" ] ; then
        echo ":django"
    else
        echo ""
    fi
}


parse_git_branch () {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
}

parse_git_dirty () {
  [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}

__vcs_status () {
    if [ -d "$PWD/.svn" ]; then
        #echo "Controlled by SVN"
        echo "svn"
    elif [ -n "$(parse_git_branch)" ]; then
        echo "git"
        #echo "${GREEN}\$(parse_git_branch)${RED}\$(parse_git_dirty)"
    fi
}

# Duke client default environment variables

#DUKE_ENV="/media/00343df4-04ec-4efe-a035-955c5ae83551/www/oxygene-regional.qc.ca/trunk/oxygene-regional"
DUKE_ENV="$PWD"
#DUKE_PS1="${CYAN}(oxygeneregional$(__django_status))${PURPLE}\u@\h${WHITE}[${YELLOW}\w${GREEN}\$(__vcs_status)${WHITE}]${NO_COLOR} (${TEST})"
DUKE_DIRTRIM=2

CUSTOM_TEMPLATES="~/.duke/templates"

_DUKE_OLD_PATH="$PATH"


export DUKE_ENV

# Add bin/ to the executable path to make them available
# without having to type their path and make all scripts 
# in it executables.
PATH="$DUKE_ENV/.duke/bin:$PATH"
export PATH
chmod a+x $DUKE_ENV/.duke/bin/*

# unset PYTHONHOME if set
# this will fail if PYTHONHOME is set to the empty string (which is bad anyway)
# could use `if (set -u; : $PYTHONHOME) ;` in bash
if [ -n "$PYTHONHOME" ] ; then
    _DUKE_OLD_PYTHONHOME="$PYTHONHOME"
    unset PYTHONHOME
fi
 
# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
    hash -r
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

function __duke_prompt {
    if [ -z "$DUKE_ENV_DISABLE_PROMPT" ] ; then
        _DUKE_OLD_PS1="$PS1"
        _DUKE_OLD_DIRTRIM="$PROMPT_DIRTRIM"
        #source "$DUKE_ENV/.duke/bin/profile"
        #source "$CUSTOM_TEMPLATES/profile"
        . profile
        
        if [ "x" != x ] ; then
            PS1="$PS1"
        elif [ "`basename \"$DUKE_ENV\"`" = "__" ] ; then
            # special case for Aspen magic directories
            # see http://www.zetadev.com/software/aspen/
            PS1="(%(project_name)s$(in_project)) $PS1"
            PROMPT_DIRTRIM="$PROMPT_DIRTRIM"
        else
            PROMPT_DIRTRIM=DUKE_DIRTRIM
            #echo $PWD 
            #echo "$CUSTOM_TEMPLATES"
            #PS1="$(__get_duke_ps1)"
            __set_duke_ps1
            #PS1="${NO_COLOR}\u@\h[${CYAN}oxygeneregional${NO_COLOR}$(__django_status)]${YELLOW}\w${NO_COLOR}${GREEN}$(__vcs_status)${NO_COLOR}\$ "
            
        fi
        #export PROMPT_DIRTRIM
        #export PS1
    fi
}
__duke_prompt
