# ----------------------------------------------------------------------------
# Buildout base configuration file for %(project_name)s
# vars: parent_dirname, project_name
# generator: django-duke-client %(duke_client_version)s

[buildout]
# ----------------------------------------------------------------------------

# Let's put less important stuff under the carpet.
bin-directory = .duke/bin/
develop-eggs-directory = .duke/develop-eggs/
downloads-directory = .duke/downloads/
eggs-directory = .duke/eggs/
installed = .duke/.installed.cfg
parts-directory = .duke/parts/

extra-paths += 
 %(project_name)s
 src

# Tell buildout to check for new packages versions
newest = false

# Zipped eggs make debugging more difficult and often import more slowly.
unzip = true

# Do not use site packages (packages installed system wide)
include-site-packages = false 
exec-sitecustomize = false

# We're developing a package whose setup.py lives in ., the current directory.
develop = .

extensions += 
 mr.developer
 buildout.dumppickedversions

# Dump automatically picked Python egg versions to a file
dump-picked-versions-file = versions.cfg

# The parts option define which sections buildout must install
parts += 
 python 
 djangodev

# Checkout package from [sources]
auto-checkout += 
 djangodukerecipe

[python] # Create a sandboxed interpreter named "python"
# ----------------------------------------------------------------------------
recipe = z3c.recipe.scripts
interpreter = python
eggs = ${buildout:eggs}

[sources] # svn, hg or git
# ----------------------------------------------------------------------------
djangodukerecipe = git git://github.com/h3/django-duke-recipe.git

[djangodev]
# ----------------------------------------------------------------------------
recipe = djangodukerecipe
project = %(project_name)s
eggs += 
 ${buildout:eggs}

[djangoprod]
# ----------------------------------------------------------------------------
recipe = djangodukerecipe
project = %(project_name)s
eggs += 
 ${buildout:eggs}
wsgi = true
